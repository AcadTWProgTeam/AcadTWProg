@model AcadTWProg.ViewModels.ScheduleFormViewModel
@{
    ViewBag.Title = "Schedule Manager";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<string> times = new List<string>() { "8:00", "8:30", "9:00", "9:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "1:00", "1:30", "2:00", "2:30", "3:00", "3:30", "4:00", "4:30", "5:00" };//, "5:30", "6:00", "6:30", "7:00", "7:30", "8:00" };
    List<string> days = new List<string>() { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" };
}

<style>
    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
    }

    .blue {
        background: blue;
    }

    .lightblue {
        background: lightblue;
    }

    .red {
        background: red;
    }


    .white {
        background: white;
    }


    th {
        background: #a9a9a9;
    }

    td, th {
        background: #FBFCFD;
        border: 1px solid #dddddd;
        text-align: center;
        font-family: monospace;
        -moz-box-shadow: 1px 1px 3px #FBFCFD;
        -webkit-box-shadow: 1px 1px 3px #FBFCFD;
        box-shadow: 1px 1px 3px #FBFCFD;
        font-size: 12px;
    }

    * {
        box-sizing: border-box;
    }

    body {
        font-family: Arial, Helvetica, sans-serif;
        background-color: #FBFCFD;
    }
</style>

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Schedules"))
{

    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-4">
            <div class="form-group">
                @Html.LabelFor(s => s.Name)
                @Html.TextBoxFor(s => s.Name, new { @class = "form-control", @id = "name" })
                @Html.ValidationMessageFor(s => s.Name)
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4" id="departmentsDropDownListSection">
            <div class="form-group">
                @Html.LabelFor(s => s.DepartmentId)
                @Html.DropDownListFor(s => s.DepartmentId,
                    new SelectList(Model.Departments, "Id", "Name"),
                    "Select Department",
                    new { @class = "form-control", @id = "departmentsDropDownList" })
                @Html.ValidationMessageFor(s => s.DepartmentId)
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-4">
            <div class="form-group">
                @Html.LabelFor(s => s.Semester)
                @Html.DropDownListFor(s => s.Semester,
                                        new SelectList(new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }),
                                        "Select Semester",
                                        new { @class = "form-control", @id = "semesterDropDownList" })
                @Html.ValidationMessageFor(s => s.Semester)
            </div>
        </div>
    </div>

    @Html.HiddenFor(s => s.ID)
    @Html.AntiForgeryToken()

    <div class="row">
        @if (!Model.IsEditMode)
        {
            <div class="col-lg-1 col-md-1 col-sm-1">
                <button type="submit" class="btn btn-success js-save">
                    <span class="glyphicon glyphicon-edit"></span> Save
                </button>
            </div>
        }

        @if (Model.IsEditMode)
        {
            <div class="col-lg-1 col-md-1 col-sm-1">

                <button type="button" class="btn btn-danger js-delete" data-movie-id="@Model.ID">
                    <span class="glyphicon glyphicon-remove"></span> Delete
                </button>
            </div>
        }
    </div>
}



@if (Model.IsEditMode)
{
    <hr />

    <div class="row">
        <div class="col-lg-2 col-md-2 col-sm-2">
            <button type="button" class="btn btn-primary" onclick="mergeHighlighted()">
                <span class="glyphicon glyphicon-plus"></span> Add class
            </button>
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2">
            <button type="button" class="btn btn-danger" onclick="deleteCells()">
                <span class="glyphicon glyphicon-remove"></span> Remove class
            </button>
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2">
            <button type="button" class="btn btn-success js-update-schedule">
                <span class="glyphicon glyphicon-check"></span> Update Schedule
            </button>
        </div>
    </div>

    <br />

    <div class="row mks-section">
        <div class="col-lg-8 col-md-8 col-sm-8">
            <table id="mytable" width="100%" border="1" cellpadding="2" cellspacing="2" style="background-color: #ffffff;">
                <tr>
                    <td></td>
                    @foreach (var time in times)
                    {
                        <td>@time</td>
                    }
                </tr>
                @for (int d = 0; d < days.Count; d++)
                {
                    <tr>
                        <td><h2>@days[d]</h2></td>
                        @for (int t = 0; t < times.Count; t++)
                        {
                            int id = times.Count * d + t;
                            <td id="@id" onclick="merge(this)"></td>
                        }
                    </tr>
                }
            </table>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-1">
            <table id="rooms" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Room</th>

                    </tr>
                    <tr>
                        <th>Name </th>
                    </tr>
                </thead>
            </table>
        </div>
        <div class="col-lg-1 col-md-1 col-sm-1">
            <table id="doc" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>doc</th>
                    </tr>
                    <tr>
                        <th>Name </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="col-lg-2 col-md-2 col-sm-2">
            <table id="cours" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th colspan="3">Cours</th>
                    </tr>
                    <tr>
                        <th>Name </th>
                        <th>Code</th>
                        <th>Hours</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <br />
    <br />

    <hr />
    <br />

    <hr />

}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        var n = 0;
        var p = 0;
        var q = 0;
        $(document).ready(function () {
            var tableDoc = $("#doc").DataTable({
                "bPaginate": false,
                "bInfo": false,
                "searching": false,
                ajax: {
                    url: "/api/teachers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function (name, type, doc) {
                            return '<span onclick="lightblue(this, \'magenta\')">' + name + '</span>';
                            }
                        }
                ]
            });
        });

        $(document).ready(function () {
            var tableRooms = $("#rooms").DataTable({
                "bPaginate": false,
                "bInfo": false,
                "searching": false,
                ajax: {
                    url: "/api/rooms",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function (name, type, rooms) {

                            return '<span onclick="red(this, \'blue\')">' + name + '</span>';


                            }
                        }
                ]
            });
        });
        $(document).ready(function () {
            var model = @Html.Raw(Json.Encode(Model));

            var tableCours = $("#cours").DataTable({
                "bPaginate": false,
                "bInfo": false,
                "searching": false,
                ajax: {
                    url: "/api/courses?departmentId="+model.DepartmentId + "&semester=" + model.Semester,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "code",
                        render: function (name, type, cours) {
                            return '<span onclick="blue(this, \'lightblue\')">' + name + '</span>';
                        }
                    },
                    {
                        data: "name",
                        render: function (name, type, cours) {
                            return '<span onclick="blue(this, \'lightblue\')">' + name + '</span>';
                        }
                    },
                    {
                        data: "hours",
                        render: function (name, type, cours) {
                            return '<span onclick="blue(this, \'lightblue\')">' + name + '</span>';
                        },
                    }
                ]
            });
        });
        $(document).ready(function () {
            var model = @Html.Raw(Json.Encode(Model));
            var timesCount = @times.Count;
            var daysCount = @days.Count;

            $("#departmentsDropDownListSection").attr("style", "display: none;");
            if (model.IsEditMode) {
                $("#semesterDropDownList").attr("disabled", "disabled");
                $("#departmentsDropDownList").attr("disabled", "disabled");
                $("#name").attr("disabled", "disabled");
            }

            loadSchedule(model, timesCount);

            $(this).on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this schedule ? This action cannot be undone !", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/Schedules/" + button.attr("data-movie-id"),
                            method: "DELETE",
                            success: function () {
                                window.location.replace("/Schedules");
                            }
                        });
                    }
                });
            });

            $(this).on("click", ".js-update-schedule", function () {
                var scheduleMatrix = [];

                var count = timesCount * daysCount;
                for (var i = 0; i < count; i++){
                    var colspan = $('#' + i).attr('colspan');
                    if (colspan == undefined)
                        continue;

                    var infos = $('#' + i).html().split(", ");
                    var code = infos[0];
                    var teacherName = infos[1];
                    var room = infos[2];

                    var object = {
                        Day: Math.floor(i / timesCount),
                        Time: i % timesCount,
                        ColSpan: parseInt(colspan, 10),
                        Code: code,
                        TeacherName: teacherName,
                        Room: room,
                        ScheduleId: model.ID,
                        Schedule: {
                            DepartmentId: model.DepartmentId,
                            Semester: model.Semester
                        }
                    };
                    scheduleMatrix.push(object);
                }

                var scheduleAsString = JSON.stringify(scheduleMatrix);
                $.ajax({
                    url: "/api/Schedules?id=" + model.ID + "&scheduleAsString=" + scheduleAsString,
                    method: "POST",
                    success: function () {
                        window.location.replace("/Schedules");
                    },
                    error: function (msg) {
                        console.log(msg.responseJSON.message);
                        bootbox.alert({
                            title: "Error",
                            message: msg.responseJSON.message
                        });
                    }
                });
            });

            $("#departmentsDropDownList").ready(loadCoursesDropDownList);
            $("#departmentsDropDownList").change(loadCoursesDropDownList);

            $("#roomsDropDownList").change(loadRoomInfos);
        });

        function loadCoursesDropDownList() {
            $.ajax({
                url: "/api/Courses?departmentId=" + $("#departmentsDropDownList").val() + "&semester=" + $("#semesterDropDownList").val(),
                method: "GET",
                success: function (data) {
                    $("#coursesDropDownList").empty();
                    for (var i = 0; i < data.length; i++) {
                        $("#coursesDropDownList").append("<option value = '" + data[i].code + "'>" + data[i].name + " (" + data[i].code + " - " + data[i].hours + ")" + "</option>");
                    }
                },
                error: function () {
                    $("#coursesDropDownList").empty();
                }
            });
        }

        function loadSchedule(model, timesCount) {
            var scheduleMatrix = JSON.parse(model.ScheduleData);
            if (scheduleMatrix == undefined || scheduleMatrix.length == 0)
                return;

            for (var i = 0; i < scheduleMatrix.length; i++){
                var scheduleData = scheduleMatrix[i];
                var id = scheduleData.Day * timesCount + scheduleData.Time;
                var colspan = scheduleData.ColSpan;
                var code = scheduleData.Code;
                var teacherName = scheduleData.TeacherName;
                var room = scheduleData.Room;

                var firstCell = document.getElementById(id);
                firstCell.colSpan = colspan;
                firstCell.textContent = code + ', ' + teacherName + ', ' + room;
                firstCell.style.color = 'white';
                firstCell.style.fontWeight = 'bold';
                firstCell.style.backgroundColor = "green";

                for (var j = id+1; j < id + colspan; j++) {
                    var otherCell = document.getElementById(j);
                    otherCell.style.display = "none";
                    otherCell.textContent = "";
                }
            }
        }

        function loadRoomInfos() {
            $.ajax({
                url: "/api/ScheduleDatas/GetRoomInfos?room=" + $("#roomsDropDownList").val(),
                method: "GET",
                success: function (data) {
                    for (var i = 0; i < data.length; i++) {
                        var colSpan = data[i].colSpan;
                        var time = data[i].time;
                        var day = data[i].day;


                    }
                }
            });
        }

        function deleteCells() {
            var tds = document.getElementsByTagName("td");
            var firstCellId = "";
            for (var i = 0; i < tds.length; i++) {
                if (tds[i].style.backgroundColor == "yellow") {

                    if (firstCellId == "") {
                        firstCellId = tds[i].id;
                        for (var i = 0; i < tds.length; i++) {
                            if (tds[i].style.backgroundColor == "yellow") {
                                tds[i].style.backgroundColor = "#FBFCFD";
                                tds[i].textContent = "";
                                m = 0;

                            }
                        }

                        var col = document.getElementById(firstCellId).colSpan;
                        //document.getElementById(firstCellId).colSpan = 1;
                        document.getElementById(firstCellId).removeAttribute('colspan');
                        var firstCellIdAsInt = parseInt(firstCellId, 10);
                        for (var j = firstCellIdAsInt; j < firstCellIdAsInt + col; j++) {
                            document.getElementById(j).style.display = "";
                            document.getElementById(j).style.backgroundColor = "#FBFCFD";
                        }
                    }
                }
            }
        }

        var k = 0;
        var t = 0;
        var v = 0;
        var m = 0;

        function merge(o) {
            o.style.backgroundColor = "yellow";
        }

        function blue(o, color) {
            var cb = document.getElementsByClassName("blue");
            for (var i = 0; i < cb.length; i++) {
                $(cb[i]).closest('tr').children('td, th').removeClass("blue");
                //$(cb[i]).closest('tr').children('td, th').addClass("white");
            }
            $(o).closest('tr').children('td, th').addClass("blue");
            //$(o).closest('td').css('background-color', 'yellow');
        }
        function lightblue(o, color) {
            var cl = document.getElementsByClassName("lightblue");
            for (var i = 0; i < cl.length; i++) {
                $(cl[i]).closest('tr').children('td, th').removeClass("lightblue");
                //$(cl[i]).closest('tr').children('td, th').addClass("white");
            }
            $(o).closest('tr').children('td, th').addClass("lightblue");
            //$(o).closest('td').css('background-color', 'yellow');
        }
        function red(o, color) {
            var cr = document.getElementsByClassName("red");
            for (var i = 0; i < cr.length; i++) {
                $(cr[i]).closest('tr').children('td, th').removeClass("red");
                //$(cr[i]).closest('tr').children('td, th').addClass("white");
            }
            $(o).closest('tr').children('td, th').addClass("red");
            //$(o).closest('td').css('background-color', 'yellow');
        }

        function mergeHighlighted() {
            var tds = document.getElementsByTagName("td");
            var firstCellId = "";
            var firstCellId = "";
            for (var i = 0; i < tds.length; i++) {
                if (tds[i].style.backgroundColor == "yellow") {
                    if (m == 0) {
                        t = i;
                        m = 1;
                    }
                    else if (m == 1 && i == t + 1) {
                        t = i;
                    }
                    else { m = 2; }
                }
            }

            if (m == 1) {
                for (var i = 0; i < tds.length; i++) {
                    if (tds[i].style.backgroundColor == "yellow") {
                        k = k + 1
                    }
                }
                for (var i = 0; i < tds.length; i++) {
                    if (tds[i].style.backgroundColor == "yellow") {
                        if (firstCellId == "") {
                            firstCellId = tds[i].id;
                            document.getElementById(firstCellId).colSpan = k;
                            k = 0;
                        }
                        else {
                            tds[i].style.backgroundColor = "green";
                            tds[i].style.display = "none";
                            tds[i].textContent = "";
                        }
                    }
                }
            }
            else {
                for (var i = 0; i < tds.length; i++) {
                    if (tds[i].style.backgroundColor == "yellow") {
                        tds[i].style.backgroundColor = "#FBFCFD";
                        m = 0;
                    }
                }
            }

            var firstCell = document.getElementById(firstCellId);
            var colorblue = document.getElementsByClassName("blue");
            var color2 = document.getElementsByClassName("lightblue");
            var color3= document.getElementsByClassName("red");
            firstCell.textContent = colorblue[0].textContent + ', ' + color2[0].textContent + ', ' + color3[0].textContent;
            //colorblue[1] = colorblue[1]+ 1;
            firstCell.style.color = 'white';
            firstCell.style.fontWeight = 'bold';
            firstCell.style.backgroundColor = "green";
            m = 0;
        }

    </script>
}
